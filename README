//Connect Four Notes

When someone wins, then you can click on a button and restart.
Not necessary but the game can involve at least one animation.
//Like drag and drop into column, piece would follow your mouse, pulsating arrow after a win
// Board spins around after a win.


//click on the column and the token drops in.

Restarting the game usually is problematic. Need to reset all variables.

When you select a column, you need to select the lowest row on the column that does not have a piece in there, place it there.
Need to constantly keep track of whose turn it is.

//THe dom will help create the visual impact and also keep track of what pieces have been played .
Hace to loop thru columns, rows, and diagonals, and see if there are 4 in a row. find sets of elements to check and see for victory.

Where to start:
1. HTML/CSS for the board.
    7 columns and 6 rows = 42 slots, which are elements with solid bg
    containing circular elem that is either empty, or has a player color.
   Board.
    7 column elements with 6 slots each.
    6 row elems with 7 slots each.
    1 container elem with 42 slots in side.
2. Column Selection
    should be done by clicking on a column. Easy to undo and replace with something cooler.
    click handler on column elements, you put the current players checker in the lowest available slot.
    find that slot element and add a class to it.
3. If no winner, switch players
4. Check for victory
    Check in selected column
    Check in row piece was placed in
    Check diagonally //hardest part of the project
5. If there is a winner, then show victory message

//David will be in the office on Saturday.  We can slack david with JS emergencies.
//David can look at our code if we commit and push it and include the git link to David in the message.
